//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MMUIViewController.h"

#import "IUiUtilExt.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIScrollViewDelegate.h"
#import "WAContactMgrExtension.h"
#import "WAWebViewJSLogicDelegate.h"
#import "YYWebViewDelegate.h"

@class ForwardMessageLogicController, NSDictionary, NSMutableDictionary, NSMutableSet, NSString, UIColor, UILongPressGestureRecognizer, UIView, UIView<YYWebViewInterface>, WAIconActionSheet, WAQuickAddWebViewBanner, WAWebViewJSLogicImpl, WAWebViewPluginScheduler;

@interface WAWebViewController : MMUIViewController <UIGestureRecognizerDelegate, IUiUtilExt, WAContactMgrExtension, WAWebViewJSLogicDelegate, UIScrollViewDelegate, YYWebViewDelegate>
{
    _Bool _bIsStatusBarBlack;
    _Bool _bUseColorfulNavBar;
    _Bool _bUseTransparentNaviBar;
    UIView<YYWebViewInterface> *webView;
    NSString *m_initUrl;
    WAWebViewJSLogicImpl *m_jsLogicImpl;
    NSMutableDictionary *m_jsInitInfo;
    NSString *m_preloadBaseURL;
    NSString *m_preloadPageRelativeURL;
    NSString *m_preloadPageQuery;
    NSString *m_preloadFrameURL;
    NSString *m_preloadIndexURL;
    _Bool m_isPreloadFrameLoaded;
    _Bool m_isPreloadIndexLoaded;
    NSDictionary *m_dicPageAttribute;
    _Bool m_isPreloadLoadTabAttribute;
    _Bool m_isPreloadSetTabBarAttribute;
    NSDictionary *m_dicTabBarAttribute;
    _Bool m_isViewWillAppearAlready;
    _Bool m_isSetPreloadViewAttribute;
    _Bool m_isFinishLoaded;
    NSString *m_nsCurrentUrl;
    _Bool m_isGetTabInfoFinished;
    NSDictionary *m_dicURL2TabInfo;
    NSMutableSet *m_setRequestTabInfoResourceURL;
    NSMutableDictionary *m_dicTabIndex2TabInfo;
    UIView *_navBarView;
    UIView *_tailBgView;
    _Bool _bIsDraggingScroll;
    double _fLastStartOffsetY;
    UIColor *_lastNavBarBgColor;
    _Bool _bFullScreen;
    UIView *_webInfoTopView;
    WAQuickAddWebViewBanner *_bannerView;
    ForwardMessageLogicController *m_forwardLogic;
    WAIconActionSheet *_actionSheet;
    long long _loadPageFrameStartTime;
    long long _loadPageIndexStartTime;
    UILongPressGestureRecognizer *m_longPressGestureRecognizer;
    _Bool m_bOfflinePage;
    _Bool m_bIFrame;
    long long m_loadingCount;
    _Bool m_bShouldForcedRotationToPortrait;
    _Bool m_bNotCallOnAppRoute;
    _Bool m_isLanscape;
    _Bool _m_bIsDelayPushWebView;
    _Bool _userTaped;
    unsigned int m_uiWebviewID;
    int _enmNavMode;
    id <WAWebViewDelegate> m_delegate;
    NSMutableDictionary *m_extraInfo;
    double m_fTabBarHeight;
    WAWebViewPluginScheduler *_pluginScheduler;
    CDUnknownBlockType _m_onLoadInitReady;
    CDUnknownBlockType _m_onLoadViewDidAppear;
}

@property(copy, nonatomic) CDUnknownBlockType m_onLoadViewDidAppear; // @synthesize m_onLoadViewDidAppear=_m_onLoadViewDidAppear;
@property(copy, nonatomic) CDUnknownBlockType m_onLoadInitReady; // @synthesize m_onLoadInitReady=_m_onLoadInitReady;
@property(nonatomic) _Bool userTaped; // @synthesize userTaped=_userTaped;
@property(nonatomic) _Bool m_bIsDelayPushWebView; // @synthesize m_bIsDelayPushWebView=_m_bIsDelayPushWebView;
@property(retain, nonatomic) WAWebViewPluginScheduler *pluginScheduler; // @synthesize pluginScheduler=_pluginScheduler;
@property(nonatomic) int enmNavMode; // @synthesize enmNavMode=_enmNavMode;
@property(retain, nonatomic) UIView *m_navBarView; // @synthesize m_navBarView=_navBarView;
@property(nonatomic) double m_fTabBarHeight; // @synthesize m_fTabBarHeight;
@property(readonly, nonatomic) NSString *m_initUrl; // @synthesize m_initUrl;
@property(retain, nonatomic) NSMutableDictionary *m_extraInfo; // @synthesize m_extraInfo;
@property(nonatomic) _Bool m_isLanscape; // @synthesize m_isLanscape;
@property(readonly, nonatomic) _Bool m_isFinishLoaded; // @synthesize m_isFinishLoaded;
@property(readonly, nonatomic) WAWebViewJSLogicImpl *m_jsLogicImpl; // @synthesize m_jsLogicImpl;
@property(nonatomic) __weak id <WAWebViewDelegate> m_delegate; // @synthesize m_delegate;
@property(readonly, nonatomic) unsigned int m_uiWebviewID; // @synthesize m_uiWebviewID;
@property(retain, nonatomic) UIView<YYWebViewInterface> *webView; // @synthesize webView;
@property(nonatomic) _Bool m_bUseTransparentNaviBar; // @synthesize m_bUseTransparentNaviBar=_bUseTransparentNaviBar;
@property(nonatomic) _Bool m_bUseColorfulNavBar; // @synthesize m_bUseColorfulNavBar=_bUseColorfulNavBar;
@property(nonatomic) _Bool m_bIsStatusBarBlack; // @synthesize m_bIsStatusBarBlack=_bIsStatusBarBlack;
- (void).cxx_destruct;
- (id)getLeftBarButton;
- (_Bool)useVConsole;
- (id)getPluginScheduler;
- (unsigned long long)getAppVersion;
- (_Bool)checkRunModeOnWebview:(id)arg1;
- (_Bool)hasPermissionWithJSAPI:(id)arg1;
- (void)keyboardDidShow:(id)arg1;
- (id)webviewController;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)webviewDidReceiveScriptMessage:(id)arg1 handler:(id)arg2;
- (_Bool)allowsInlineMediaPlay;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3 isMainFrame:(_Bool)arg4;
- (id)getPreInjectScriptStr;
- (void)goToURL:(id)arg1;
- (void)stop;
- (void)reload;
- (void)willDismissAndShow;
- (void)viewWillBeDismissed:(_Bool)arg1;
- (void)viewDidBePoped:(_Bool)arg1;
- (void)viewWillBePoped:(_Bool)arg1;
- (void)viewDidBePushed:(_Bool)arg1;
- (void)viewWillBePushed:(_Bool)arg1;
- (void)viewWillPop:(_Bool)arg1;
- (void)viewWillPush:(_Bool)arg1;
- (void)willDisappear;
- (void)didAppear;
- (void)willAppear;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (_Bool)useBlackStatusbar;
- (_Bool)useTransparentNavibar;
- (void)onLongPressOnWebview:(id)arg1;
- (void)enableLongPressDetect;
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)adjustSubviewRects;
- (void)resetWebviewInsetOrY;
- (void)calcCurrentWebViewInset:(struct UIEdgeInsets *)arg1 y:(double *)arg2 height:(double *)arg3;
- (void)calcCurrentWebViewY:(double *)arg1 height:(double *)arg2;
- (void)internalInitWithBaseURL:(id)arg1 pageRelativeURL:(id)arg2 extraInfo:(id)arg3 delegate:(id)arg4;
- (id)initWithBaseURL:(id)arg1 pageRelativeURL:(id)arg2 extraInfo:(id)arg3 delegate:(id)arg4;
- (void)dealloc;
- (void)setBackgroundColor;
- (void)notifyToJSBridgeVisibilityChanged:(_Bool)arg1;
- (id)extraInfo;
- (void)printConsoleLog:(id)arg1;
- (void)sendEventToJSBridge:(id)arg1 Param:(id)arg2;
- (void)doJsApiInitEvent;
- (void)setCurrentUrl:(id)arg1;
- (id)getCurrentUrl;
- (void)onAllExit;
- (void)OnReturn;
- (void)doBackActionCleanWithType;
- (id)getSessionID;
- (id)getCurrentUserName;
- (id)getPresentingWebVC;
- (_Bool)isTabWebVC;
- (_Bool)isThisPageUsePreload;
- (_Bool)isDebugMode;
- (_Bool)isAppLaunchFirstWebview;
- (id)getInitUrl;
- (id)getCurrentAppId;
- (void)setTitle:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

